{"ast":null,"code":"var _jsxFileName = \"E:\\\\OTHER\\\\pdf.sliit\\\\Y3S2\\\\PAF_Project\\\\PAF_Project\\\\frontend\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../utils/axiosConfig';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n    email: '',\n    firstName: '',\n    lastName: ''\n  });\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    try {\n      const res = await api.post('/auth/register', form);\n      localStorage.setItem('token', res.data.token);\n      navigate('/login');\n      toast.success('Registration successful!');\n    } catch (err) {\n      // alert('Register failed');\n      toast.error('Registration failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), ['username', 'email', 'firstName', 'lastName', 'password'].map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: field === 'password' ? 'password' : 'text',\n      placeholder: field,\n      value: form[field],\n      onChange: e => setForm({\n        ...form,\n        [field]: e.target.value\n      }),\n      className: \"border p-2 mb-2 block w-full rounded\"\n    }, field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      className: \"bg-green-600 text-white px-4 py-2 rounded\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"6yxm70L5aWzd0va/aHJuZuhaZ0Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","api","toast","jsxDEV","_jsxDEV","Register","_s","form","setForm","username","password","email","firstName","lastName","navigate","handleRegister","res","post","localStorage","setItem","data","token","success","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","field","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/OTHER/pdf.sliit/Y3S2/PAF_Project/PAF_Project/frontend/src/pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../utils/axiosConfig';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Register = () => {\r\n  const [form, setForm] = useState({\r\n    username: '', password: '', email: '', firstName: '', lastName: ''\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const res = await api.post('/auth/register', form);\r\n      localStorage.setItem('token', res.data.token);\r\n      navigate('/login');\r\n      toast.success('Registration successful!');\r\n    } catch (err) {\r\n      // alert('Register failed');\r\n\ttoast.error('Registration failed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-10\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Register</h2>\r\n      {['username', 'email', 'firstName', 'lastName', 'password'].map(field => (\r\n        <input\r\n          key={field}\r\n          type={field === 'password' ? 'password' : 'text'}\r\n          placeholder={field}\r\n          value={form[field]}\r\n          onChange={(e) => setForm({ ...form, [field]: e.target.value })}\r\n          className=\"border p-2 mb-2 block w-full rounded\"\r\n        />\r\n      ))}\r\n      <button onClick={handleRegister} className=\"bg-green-600 text-white px-4 py-2 rounded\">\r\n        Register\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,sBAAsB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAC/BU,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAClE,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAAEV,IAAI,CAAC;MAClDW,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;MAC7CP,QAAQ,CAAC,QAAQ,CAAC;MAClBZ,KAAK,CAACoB,OAAO,CAAC,0BAA0B,CAAC;IAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ;MACLrB,KAAK,CAACsB,KAAK,CAAC,sBAAsB,CAAC;IAChC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBtB,OAAA;MAAIqB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpD,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAACC,GAAG,CAACC,KAAK,iBACnE5B,OAAA;MAEE6B,IAAI,EAAED,KAAK,KAAK,UAAU,GAAG,UAAU,GAAG,MAAO;MACjDE,WAAW,EAAEF,KAAM;MACnBG,KAAK,EAAE5B,IAAI,CAACyB,KAAK,CAAE;MACnBI,QAAQ,EAAGC,CAAC,IAAK7B,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAE,CAACyB,KAAK,GAAGK,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC,CAAE;MAC/DV,SAAS,EAAC;IAAsC,GAL3CO,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMX,CACF,CAAC,eACF1B,OAAA;MAAQmC,OAAO,EAAExB,cAAe;MAACU,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EAAC;IAEvF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCID,QAAQ;EAAA,QAIKL,WAAW;AAAA;AAAAwC,EAAA,GAJxBnC,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}